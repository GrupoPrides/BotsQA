{"version":3,"sources":["WebChat.js","MinimizableWebChat.js","App.js","index.js","Captura.PNG"],"names":["WebChat","className","onFetchToken","store","token","directLine","useMemo","createDirectLine","styleSet","createStyleSet","backgroundColor","botAvatarImage","botAvatarInitials","userAvatarImage","userAvatarInitials","useEffect","style","color","fontSize","MinimizableWebChat","createStore","dispatch","next","action","type","console","log","setTimeout","payload","name","value","language","window","navigator","$","append","hide","fadeIn","delay","fadeOut","localStorage","getItem","activity","from","role","setNewMessage","useState","loaded","setLoaded","minimized","setMinimized","newMessage","side","setSide","setToken","handleFetchToken","useCallback","a","async","fetch","method","headers","Headers","res","json","setItem","handleMaximizeButtonClick","handleMinimizeButtonClick","handleSwitchButtonClick","onClick","classNames","styleOptions","bubbleBackground","bubbleBorder","bubbleBorderRadius","bubbleFromUserBackground","bubbleFromUserBorder","bubbleFromUserBorderRadius","bubbleFromUserTextColor","bubbleTextColor","App","alt","src","WebPageBackground2","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dc4171b9.chunk.js","sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport ReactWebChat, { createDirectLine, createStyleSet } from 'botframework-webchat';\n\nimport './WebChat.css';\n\nconst WebChat = ({ className, onFetchToken, store, token }) => {\n  const directLine = useMemo(() => createDirectLine({ token }), [token]);\n\n  const styleSet = useMemo(\n    () =>\n      createStyleSet({\n        backgroundColor: 'Transparent', \n        botAvatarImage: 'https://botmemostorage.blob.core.windows.net/memo-bot/img/AvatarMemo.png',\n        botAvatarInitials: 'Memo',\n        userAvatarImage: 'https://cdn3.iconfinder.com/data/icons/vector-icons-6/96/256-512.png',\n        userAvatarInitials: 'User'\n      }),\n    []\n  );\n\n  useEffect(() => {\n    onFetchToken();\n  }, [onFetchToken]);\n\n  return token ? (\n    <ReactWebChat className={`${className || ''} web-chat`} directLine={directLine} store={store} styleSet={styleSet} />\n  ) : (\n    <div className={`${className || ''} connect-spinner`}>\n      <div className=\"content\">\n        <div className=\"icon\">\n          {/* <span className=\"ms-Icon ms-Icon--Robot\" /> */}          \n          <span className=\"avat\" />\n        </div>\n        <p style={{color:'black', fontSize:'25px'}}>Por favor espere mientras nos conectamos.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default WebChat;\n","import classNames from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { createStore, createStyleSet } from 'botframework-webchat';\n\nimport WebChat from './WebChat';\n\nimport './fabric-icons-inline.css';\nimport './MinimizableWebChat.css';\nimport './fabric-icons-inline.css';\nimport './MinimizableWebChat.css';\n\nimport 'core-js/es6/map';\nimport 'core-js/es6/promise'\nimport 'core-js/es6/set';\nimport 'core-js/es6/symbol';\nimport 'core-js/fn/array/find-index';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/math/sign';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/string/starts-with';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\nimport $ from 'jquery';\n\n\n\n\nconst MinimizableWebChat = () => {\n  const store = useMemo(\n    () =>\n      createStore({}, ({ dispatch }) => next => action => {\n        if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {\n          console.log('DIRECT_LINE/CONNECT_FULFILLED');\n        setTimeout(() => {\n          dispatch({\n            type: 'WEB_CHAT/SEND_EVENT',\n            payload: {\n              name: 'webchat/join',\n              value: {\n                language: window.navigator.language\n              },\n              \n            }\n          });\n        }, 1000);\n \n        displayAnimation();\n \n        if (localStorage.getItem('welcome') === 'true'){\n            console.log(window.navigator.language + ' WEB_CHAT/SEND_EVENT');\n                  setTimeout(() => {\n          dispatch({\n            type: 'WEB_CHAT/SEND_EVENT',\n            payload: {\n              name: 'requestWelcomeDialog',\n              value: {\n                language: window.navigator.language\n              }\n            }\n          });\n        }, 1000);\n        }\n        } else if(action.type === 'DIRECT_LINE/CONNECT_FULFILLED' && localStorage.getItem(\"welcome\") === \"false\"){\n          dispatch({\n            type: 'WEB_CHAT/SEND_EVENT',\n            payload: {\n              name: 'requestWelcomeDialog',\n              value: {\n                language: window.navigator.language\n              }\n            }\n          });\n        }else if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {\n          if (action.payload.activity.from.role === 'bot') {\n            setNewMessage(true);\n          }\n        }\n        return next(action);\n      }),\n    []\n  );\n\n  function displayAnimation() {\n\n    var ROOT_FOLDER = 'https://botmemostorage.blob.core.windows.net/memo-bot/img/memo-version-final.png';\n    // setTimeout(function(){\n        $('.css-ljhy6a.css-7c9av6')\n            .append($('<li id=\"animation-item\" class=\"css-1qyo5rb\">'\n                        + '<div class=\"css-hgucfj css-1wi3416\">'    //1\n                            + '<div class=\"css-7xorrq avatar\"></div>' \n                            + '<div class=\"content\">' //2\n                                + '<div class=\"row message\">' //3\n                                    + '<div class=\"css-ostbv8 bubble\">' //4\n                                        + '<div class=\"markdown css-o3xlyv\"><p>' //5\n                                            + '<img style=\"width: 100%;height: auto;\" src=\"' + ROOT_FOLDER + '\" class=\"animation-image\" />'\n                                        + '</p></div>' //5\n                                    + '</div>' //4\n                                    + '<div class=\"filler\"></div>' \n                                + '</div>' //3\n                                + '<div class=\"row\">' \n                                    + '<span class=\"css-1phiexw\">'\n                                    // + 'Just now'\n                                    + '</span>' \n                                    + '<div class=\"filler\"></div>' \n                                + '</div>' \n                            + '</div>' //2\n                            + '<div class=\"filler\"></div>' \n                        + '</div>' //1\n                    + '</li>').hide().fadeIn(2000));\n\n        $('#animation-item').delay(10000).fadeOut(2000);\n    // }, 1000);\n}\n\n  const styleOptions = {\n    bubbleBackground: '#222',\n  bubbleBorder: 'solid 1px #444',\n  bubbleBorderRadius: 20,\n  bubbleFromUserBackground: '#222',\n  bubbleFromUserBorder: 'solid 1px #444',\n  bubbleFromUserBorderRadius: 20,\n  bubbleFromUserTextColor: 'White',\n  bubbleTextColor: 'White',\n  botAvatarImage:\n  'https://botmemostorage.blob.core.windows.net/memo-bot/img/AvatarMemo.png',\n  botAvatarInitials: 'BF',\n    userAvatarImage: 'https://docs.microsoft.com/en-us/azure/bot-service/v4sdk/media/logo_bot.svg?view=azure-bot-service-4.0',\n    userAvatarInitials: 'WC'\n  };\n\n  const styleSet = useMemo(\n    () =>\n      createStyleSet({\n        backgroundColor: 'Transparent'\n      }),\n    []\n  );\n\n  const [loaded, setLoaded] = useState(false);\n  const [minimized, setMinimized] = useState(true);\n  const [newMessage, setNewMessage] = useState(false);\n  const [side, setSide] = useState('right');\n  const [token, setToken] = useState();\n\n  // To learn about reconnecting to a conversation, see the following documentation:\n  // https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-reconnect-to-conversation?view=azure-bot-service-4.0\n\n  const handleFetchToken = useCallback(async () => {\n    if (!token) {\n      \n      const res = await fetch('https://directline.botframework.com/v3/directline/conversations', { \n        method: 'POST',\n        headers: new Headers({\n          'Authorization': 'Bearer ' + 'Q_69ep7brSw.nkqXe3RuCBkAygne0SgFPrXU5TcPV9HCnKFD57zoiUs', //pr\n          //'Authorization': 'Bearer ' + 'VwC40YyznPU.p3IkEEgQBn9vzgcbs-8yHM508qmZjFmdlpcz8VIEyAY',//qa \n          'Content-Type': '\"Content-Type\", \"application/json\"'\n        })\n      });\n      const { token } = await res.json();\n\n      \n      console.log(res)\n      localStorage.setItem(\"token\",token);\n      localStorage.setItem(\"welcome\",false);\n      setToken(token);\n    }\n  }, [setToken, token]);\n  \n\n  const handleMaximizeButtonClick = useCallback(async () => {\n    setLoaded(true);\n    setMinimized(false);\n    setNewMessage(false);\n  }, [setMinimized, setNewMessage]);\n\n  const handleMinimizeButtonClick = useCallback(() => {\n    setMinimized(true);\n    setNewMessage(false);\n  }, [setMinimized, setNewMessage]);\n\n  const handleSwitchButtonClick = useCallback(() => {\n    setSide(side === 'left' ? 'right' : 'left');\n  }, [setSide, side]);\n  const handleLanguageButtonClick = useCallback (()=>{\n    setNewMessage(true)\n  })\n\n  // TODO: [P2] Currently, we cannot unmount Web Chat from DOM when it is minimized.\n  //       Today, if we unmount it, Web Chat will call disconnect on DirectLineJS object.\n  //       When minimized, we still want to maintain that connection while the UI is gone.\n  //       This is related to https://github.com/microsoft/BotFramework-WebChat/issues/2750.\n\n  return (\n    <div className=\"minimizable-web-chat\">\n      {minimized && (\n        <button className=\"maximize\" onClick={handleMaximizeButtonClick}>\n          {newMessage && <span className=\"ms-Icon ms-Icon--CircleShapeSolid red-dot\" />}\n        </button>\n      )}\n      {loaded && (\n        <div className={classNames(side === 'left' ? 'chat-box left' : 'chat-box right', minimized ? 'hide' : '')}>\n          <header>\n            <div className=\"filler\" />\n            <button className=\"switch\" onClick={handleSwitchButtonClick}>\n              <span className=\"ms-Icon ms-Icon--Switch\" />\n            </button>\n            <button className=\"minimize\" onClick={handleMinimizeButtonClick}>\n              <span className=\"ms-Icon ms-Icon--ChromeMinimize\" />\n            </button>\n          </header>\n          <WebChat\n            className=\"react-web-chat\"\n            onFetchToken={handleFetchToken}\n            store={store}\n            styleSet={styleSet}\n            token={token}\n            styleOptions = {styleOptions}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nfunction generateUserId(){\n  return /*\"dl_\" +*/ Date.now().toString() + (Math.floor(Math.random() * 1000000) + 1).toString();\n}\nexport default MinimizableWebChat;\n","import React from 'react';\n\nimport MinimizableWebChat from './MinimizableWebChat';\nimport WebPageBackground2 from './Captura.PNG';\nimport './App.css';\n\n\n\nconst App = () => (\n  <div className=\"App\">\n    { <img alt=\"product background\" src={WebPageBackground2} />}\n    { <MinimizableWebChat /> }\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('div_bot_root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/Captura.b8a553c0.PNG\";"],"sourceRoot":""}